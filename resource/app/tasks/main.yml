---
- name: '[resource/app] Debug relevant variables'
  debug:
    var: '{{ item }}'
    verbosity: 1
  with_items: [resource_meta, terraplate_instance, variables, component_vars, playbook_tfvars, resource_stage_vars, resource_tfvars]

- name: '[resource/app] Add {{ resource_root_name }} variables to .tfvars'
  blockinfile:
    create: no
    dest: '{{ terraplate_instance.tfvars_file }}'
    marker: '# {mark} {{ resource_root_name }}'
    block: |
      {% for key, value in variables.iteritems() %}
      {% set write_key = resource_root_name_underscore + '_' + key %}
      {% set write_key = write_key + ' ' * (60 - (write_key | length)) %}
      {% set write_value = (resource_tfvars[key] | default(value.default)) %}
      {% if value.type is defined %}
      {% if value.type == 'map' %}
      {{ write_key }} = { {% for xkey, xvalue in write_value.iteritems() %}{{ xkey }} = "{{ xvalue }}" {% endfor %}}
      {% elif value.type == 'list' %}
      {{ write_key }} = [ {% for xvalue in write_value %}"{{ xvalue }}", {% endfor %}]
      {% else %}
      # WARN: missing type
      {% endif %}
      {% else %}
      {{ write_key }} = "{{ write_value }}"
      {% endif %}
      {% endfor %}
  when: (variables | length) > 0
