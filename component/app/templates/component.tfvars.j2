terragrunt = {
  terraform {
    source = "{{ tpl_component.app.path_to_lib }}"
    # NOTE: This is used to source provider secrets, e.g. GitHub token
{% if (tpl_component.needs.providers | length) > 0 %}
    extra_arguments "credentials" {
      arguments = [
{% for provider in tpl_component.needs.providers %}
        "-var-file=${get_tfvars_dir()}/{{ tpl_service.credentials_path }}/{{ provider }}.tfvars",
{% endfor %}
      ]
      commands  = ["${get_terraform_commands_that_need_locking()}"]
    }
{% endif %}
  }
  include = {
    path = "${find_in_parent_folders()}"
  }
{% if (tpl_component.dependencies | length) > 0 %}
  dependencies {
    paths = [
{% for dependency in tpl_component.dependencies %}
      "{{ dependency }}",
{% endfor %}
    ]
  }
{% endif %}
}
{% set pad_length = 60 %}

{# TODO set providers in tasks/main or in the component_#}
{% set providers = tpl_component.needs.providers | default({}) %}
{% for provider in providers %}
{% set provider_vars = tpl_component.providers[provider] | default(tpl_service.default_providers[provider]) %}
{% if provider_vars | length > 0 %}
{% for var, value in provider_vars.iteritems() %}
{% set key = 'provider_' + provider + '_' + var | replace('-', '_') %}
{% set key_pad = ' ' * (pad_length - (key | length)) %}
{{ key }}{{ key_pad }} = "{{ value }}"
{% endfor %}
{% endif %}
{% endfor %}

{# TODO: this lookup of remote_states needs to be more flexible #}
{% set remote_states = tpl_component.needs.remote_states | default({}) %}
{% for provider in remote_states %}
  {%- set provider_vars = tpl_component.remote_state_keys[provider] | default(tpl_service.default_remote_state_keys[provider]) %}
  {%- for var, value in provider_vars.iteritems() %}
    {%- set key = 'remote_state_' + provider + '_' + var | replace('-', '_') %}
    {%- set key_pad = ' ' * (pad_length - (key | length)) %}

{{ key }}{{ key_pad }} = "{{ value }}"
  {%- endfor %}
{% endfor %}
