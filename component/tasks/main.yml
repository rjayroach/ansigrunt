---
- name: Set tpl_component values
  set_fact:
    tpl_component:
      namespace: '{{ terraplate_component_namespace }}'
      name: '{{ terraplate_component_name }}'
      hash: '{{ terraplate_component_namespace }}-{{ terraplate_component_name }}'
      slash: '{{ terraplate_component_namespace }}/{{ terraplate_component_name }}'
      dir: '{{ tpl_service.lib_dir }}/{{ terraplate_component_namespace }}/{{ terraplate_component_name }}'
      # TODO: in vars/main: needs: providers: {} remote_states: {}
      # and then just merge this with the component's needs or default of {}
      needs: '{{ needs | default({}) }}'
      provides: '{{ provides | default({}) }}'

- name: Debug terraplate_component variables
  debug:
    var: tpl_component
    # verbosity: 1

- name: Include lib to generate component
  include_role:
    name: terraplate/component/lib
  when: tpl_service.action == 'lib'

- name: Include app to add to instance tfvars
  include_role:
    name: terraplate/component/app
  when: tpl_service.action == 'app'
